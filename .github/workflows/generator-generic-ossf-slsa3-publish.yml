# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow generates an SLSA provenance file for the CHDDOS project.
# The generation satisfies level 3 for the provenance requirements - see https://slsa.dev/spec/v0.1/requirements
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

# CHDDOS Legal Disclaimer:
# CHDDOS is developed by ChillHack Hong Kong Web Development (https://chillhack.net, info@chillhack.net)
# solely for authorized penetration testing and educational purposes. Unauthorized use for cyber attacks
# is illegal and carries extremely high legal consequences under global cybersecurity laws, including
# the Computer Fraud and Abuse Act (CFAA), EU Cybersecurity Act, and Hong Kong Computer Crimes Ordinance.
# ChillHack and its contributors are not responsible for any misuse or damage caused by this tool.
# Always obtain explicit permission from the target system's owner before conducting any tests.

name: SLSA Provenance for CHDDOS

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      digests: ${{ steps.hash.outputs.digests }}
    steps:
      - uses: actions/checkout@v4
      # ========================================================
      #
      # Step 1: Prepare the CHDDOS artifact.
      #
      # ========================================================
      - name: Prepare CHDDOS artifact
        run: |
          # Ensure the chddos.py file is available as the primary artifact.
          if [ ! -f chddos.py ]; then
            echo "Error: chddos.py not found in repository"
            exit 1
          fi
          # Copy chddos.py to ensure it is the artifact for provenance.
          cp chddos.py artifact_chddos.py
      # ========================================================
      #
      # Step 2: Generate the provenance subject for chddos.py.
      #
      # ========================================================
      - name: Generate subject for provenance
        id: hash
        run: |
          set -euo pipefail
          # List the CHDDOS artifact.
          files="artifact_chddos.py"
          # Generate the subjects (base64 encoded).
          echo "hashes=$(sha256sum $files | base64 -w0)" >> "${GITHUB_OUTPUT}"
  provenance:
    needs: [build]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.digests }}"
      upload-assets: true # Upload provenance to a new release
